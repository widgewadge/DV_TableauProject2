WHEN cap_color = \\\'b\\\' THEN \\\'buff\\\'
WHEN cap_color = \\\'c\\\' THEN \\\'cinnamon\\\'
WHEN cap_color = \\\'e\\\' THEN \\\'red\\\'
WHEN cap_color = \\\'g\\\' THEN \\\'gray\\\'
WHEN cap_color = \\\'n\\\' THEN \\\'brown\\\'
WHEN cap_color = \\\'p\\\' THEN \\\'pink\\\'
WHEN cap_color = \\\'r\\\' THEN \\\'green\\\'
WHEN cap_color = \\\'u\\\' THEN \\\'purple\\\'
WHEN cap_color = \\\'w\\\' THEN \\\'white\\\'
WHEN cap_color = \\\'y\\\' THEN \\\'yellow\\\'
ELSE cap_color END as cap_color, (SELECT count(*) FROM mushroom) n
FROM mushroom GROUP BY edible_or_poisonous, cap_color)
"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_kp8755', PASS='orcl_kp8755', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df_rank)
# rank
df_rank <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"
SELECT edible_or_poisonous, cap_color, n, rank()
OVER (PARTITION BY edible_or_poisonous ORDER BY n DESC) as RANK
FROM
(SELECT
CASE
WHEN edible_or_poisonous = \\\'e\\\' THEN \\\'edible\\\'
WHEN edible_or_poisonous = \\\'p\\\' THEN \\\'poisonous\\\'
ELSE edible_or_poisonous END as edible_or_poisonous,
CASE
WHEN cap_color = \\\'b\\\' THEN \\\'buff\\\'
WHEN cap_color = \\\'c\\\' THEN \\\'cinnamon\\\'
WHEN cap_color = \\\'e\\\' THEN \\\'red\\\'
WHEN cap_color = \\\'g\\\' THEN \\\'gray\\\'
WHEN cap_color = \\\'n\\\' THEN \\\'brown\\\'
WHEN cap_color = \\\'p\\\' THEN \\\'pink\\\'
WHEN cap_color = \\\'r\\\' THEN \\\'green\\\'
WHEN cap_color = \\\'u\\\' THEN \\\'purple\\\'
WHEN cap_color = \\\'w\\\' THEN \\\'white\\\'
WHEN cap_color = \\\'y\\\' THEN \\\'yellow\\\'
ELSE cap_color END as cap_color, count(*)/(SELECT count(*) FROM mushroom) n
FROM mushroom GROUP BY edible_or_poisonous, cap_color)
"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_kp8755', PASS='orcl_kp8755', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df_rank)
# rank
df_rank <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"
SELECT edible_or_poisonous, cap_color, n, rank()
OVER (PARTITION BY edible_or_poisonous ORDER BY n DESC) as RANK
FROM
(SELECT
CASE
WHEN edible_or_poisonous = \\\'e\\\' THEN \\\'edible\\\'
WHEN edible_or_poisonous = \\\'p\\\' THEN \\\'poisonous\\\'
ELSE edible_or_poisonous END as edible_or_poisonous,
CASE
WHEN cap_color = \\\'b\\\' THEN \\\'buff\\\'
WHEN cap_color = \\\'c\\\' THEN \\\'cinnamon\\\'
WHEN cap_color = \\\'e\\\' THEN \\\'red\\\'
WHEN cap_color = \\\'g\\\' THEN \\\'gray\\\'
WHEN cap_color = \\\'n\\\' THEN \\\'brown\\\'
WHEN cap_color = \\\'p\\\' THEN \\\'pink\\\'
WHEN cap_color = \\\'r\\\' THEN \\\'green\\\'
WHEN cap_color = \\\'u\\\' THEN \\\'purple\\\'
WHEN cap_color = \\\'w\\\' THEN \\\'white\\\'
WHEN cap_color = \\\'y\\\' THEN \\\'yellow\\\'
ELSE cap_color END as cap_color, count(*) n
FROM mushroom GROUP BY edible_or_poisonous, cap_color)
"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_kp8755', PASS='orcl_kp8755', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df_rank)
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"SELECT empno, deptno, sal, nth_value(sal, 2)
OVER (PARTITION BY deptno) max_sal
FROM emp
order by 2,3 desc"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDB1.usuniversi01134.oraclecloud.internal', USER='DV_Scott', PASS='orcl', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df)
View(df_rank)
# rank
df_rank <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"
SELECT edible_or_poisonous, cap_color, n, rank()
OVER (PARTITION BY edible_or_poisonous ORDER BY n DESC) as RANK
FROM
(SELECT
CASE
WHEN edible_or_poisonous = \\\'e\\\' THEN \\\'edible\\\'
WHEN edible_or_poisonous = \\\'p\\\' THEN \\\'poisonous\\\'
ELSE edible_or_poisonous END as edible_or_poisonous,
CASE
WHEN cap_color = \\\'b\\\' THEN \\\'buff\\\'
WHEN cap_color = \\\'c\\\' THEN \\\'cinnamon\\\'
WHEN cap_color = \\\'e\\\' THEN \\\'red\\\'
WHEN cap_color = \\\'g\\\' THEN \\\'gray\\\'
WHEN cap_color = \\\'n\\\' THEN \\\'brown\\\'
WHEN cap_color = \\\'p\\\' THEN \\\'pink\\\'
WHEN cap_color = \\\'r\\\' THEN \\\'green\\\'
WHEN cap_color = \\\'u\\\' THEN \\\'purple\\\'
WHEN cap_color = \\\'w\\\' THEN \\\'white\\\'
WHEN cap_color = \\\'y\\\' THEN \\\'yellow\\\'
ELSE cap_color END as cap_color, count(*) n
FROM mushroom GROUP BY edible_or_poisonous, cap_color)
ORDER BY 1,3
"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_kp8755', PASS='orcl_kp8755', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df_rank)
# rank
df_rank <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"
SELECT edible_or_poisonous, cap_color, n, rank()
OVER (PARTITION BY edible_or_poisonous ORDER BY n DESC) as RANK
FROM
(SELECT
CASE
WHEN edible_or_poisonous = \\\'e\\\' THEN \\\'edible\\\'
WHEN edible_or_poisonous = \\\'p\\\' THEN \\\'poisonous\\\'
ELSE edible_or_poisonous END as edible_or_poisonous,
CASE
WHEN cap_color = \\\'b\\\' THEN \\\'buff\\\'
WHEN cap_color = \\\'c\\\' THEN \\\'cinnamon\\\'
WHEN cap_color = \\\'e\\\' THEN \\\'red\\\'
WHEN cap_color = \\\'g\\\' THEN \\\'gray\\\'
WHEN cap_color = \\\'n\\\' THEN \\\'brown\\\'
WHEN cap_color = \\\'p\\\' THEN \\\'pink\\\'
WHEN cap_color = \\\'r\\\' THEN \\\'green\\\'
WHEN cap_color = \\\'u\\\' THEN \\\'purple\\\'
WHEN cap_color = \\\'w\\\' THEN \\\'white\\\'
WHEN cap_color = \\\'y\\\' THEN \\\'yellow\\\'
ELSE cap_color END as cap_color, count(*) n
FROM mushroom GROUP BY edible_or_poisonous, cap_color)
ORDER BY 1,3 DESC
"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_kp8755', PASS='orcl_kp8755', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df_rank)
# nth_value
df_nth <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"
SELECT edible_or_poisonous, cap_color, n, nth_value(n,3)
OVER (PARTITION BY edible_or_poisonous)
FROM
(SELECT
CASE
WHEN edible_or_poisonous = \\\'e\\\' THEN \\\'edible\\\'
WHEN edible_or_poisonous = \\\'p\\\' THEN \\\'poisonous\\\'
ELSE edible_or_poisonous END as edible_or_poisonous,
CASE
WHEN cap_color = \\\'b\\\' THEN \\\'buff\\\'
WHEN cap_color = \\\'c\\\' THEN \\\'cinnamon\\\'
WHEN cap_color = \\\'e\\\' THEN \\\'red\\\'
WHEN cap_color = \\\'g\\\' THEN \\\'gray\\\'
WHEN cap_color = \\\'n\\\' THEN \\\'brown\\\'
WHEN cap_color = \\\'p\\\' THEN \\\'pink\\\'
WHEN cap_color = \\\'r\\\' THEN \\\'green\\\'
WHEN cap_color = \\\'u\\\' THEN \\\'purple\\\'
WHEN cap_color = \\\'w\\\' THEN \\\'white\\\'
WHEN cap_color = \\\'y\\\' THEN \\\'yellow\\\'
ELSE cap_color END as cap_color, count(*) n
FROM mushroom GROUP BY edible_or_poisonous, cap_color)
"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_kp8755', PASS='orcl_kp8755', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df_nth)
# nth_value
df_nth <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"
SELECT edible_or_poisonous, cap_color, n, nth_value(n,3)
OVER (PARTITION BY edible_or_poisonous)
FROM
(SELECT
CASE
WHEN edible_or_poisonous = \\\'e\\\' THEN \\\'edible\\\'
WHEN edible_or_poisonous = \\\'p\\\' THEN \\\'poisonous\\\'
ELSE edible_or_poisonous END as edible_or_poisonous,
CASE
WHEN cap_color = \\\'b\\\' THEN \\\'buff\\\'
WHEN cap_color = \\\'c\\\' THEN \\\'cinnamon\\\'
WHEN cap_color = \\\'e\\\' THEN \\\'red\\\'
WHEN cap_color = \\\'g\\\' THEN \\\'gray\\\'
WHEN cap_color = \\\'n\\\' THEN \\\'brown\\\'
WHEN cap_color = \\\'p\\\' THEN \\\'pink\\\'
WHEN cap_color = \\\'r\\\' THEN \\\'green\\\'
WHEN cap_color = \\\'u\\\' THEN \\\'purple\\\'
WHEN cap_color = \\\'w\\\' THEN \\\'white\\\'
WHEN cap_color = \\\'y\\\' THEN \\\'yellow\\\'
ELSE cap_color END as cap_color, count(*) n
FROM mushroom GROUP BY edible_or_poisonous, cap_color)
ORDER BY 1,3 DESC
"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_kp8755', PASS='orcl_kp8755', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df_nth)
# nth_value
df_nth <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"
SELECT edible_or_poisonous, cap_color, n, nth_value(n,5)
OVER (PARTITION BY edible_or_poisonous)
FROM
(SELECT
CASE
WHEN edible_or_poisonous = \\\'e\\\' THEN \\\'edible\\\'
WHEN edible_or_poisonous = \\\'p\\\' THEN \\\'poisonous\\\'
ELSE edible_or_poisonous END as edible_or_poisonous,
CASE
WHEN cap_color = \\\'b\\\' THEN \\\'buff\\\'
WHEN cap_color = \\\'c\\\' THEN \\\'cinnamon\\\'
WHEN cap_color = \\\'e\\\' THEN \\\'red\\\'
WHEN cap_color = \\\'g\\\' THEN \\\'gray\\\'
WHEN cap_color = \\\'n\\\' THEN \\\'brown\\\'
WHEN cap_color = \\\'p\\\' THEN \\\'pink\\\'
WHEN cap_color = \\\'r\\\' THEN \\\'green\\\'
WHEN cap_color = \\\'u\\\' THEN \\\'purple\\\'
WHEN cap_color = \\\'w\\\' THEN \\\'white\\\'
WHEN cap_color = \\\'y\\\' THEN \\\'yellow\\\'
ELSE cap_color END as cap_color, count(*) n
FROM mushroom GROUP BY edible_or_poisonous, cap_color)
"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_kp8755', PASS='orcl_kp8755', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df_nth)
# nth_value
df_nth <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"
SELECT edible_or_poisonous, cap_color, n, nth_value(n,5)
OVER (PARTITION BY edible_or_poisonous)
FROM
(SELECT
CASE
WHEN edible_or_poisonous = \\\'e\\\' THEN \\\'edible\\\'
WHEN edible_or_poisonous = \\\'p\\\' THEN \\\'poisonous\\\'
ELSE edible_or_poisonous END as edible_or_poisonous,
CASE
WHEN cap_color = \\\'b\\\' THEN \\\'buff\\\'
WHEN cap_color = \\\'c\\\' THEN \\\'cinnamon\\\'
WHEN cap_color = \\\'e\\\' THEN \\\'red\\\'
WHEN cap_color = \\\'g\\\' THEN \\\'gray\\\'
WHEN cap_color = \\\'n\\\' THEN \\\'brown\\\'
WHEN cap_color = \\\'p\\\' THEN \\\'pink\\\'
WHEN cap_color = \\\'r\\\' THEN \\\'green\\\'
WHEN cap_color = \\\'u\\\' THEN \\\'purple\\\'
WHEN cap_color = \\\'w\\\' THEN \\\'white\\\'
WHEN cap_color = \\\'y\\\' THEN \\\'yellow\\\'
ELSE cap_color END as cap_color, count(*) n
FROM mushroom GROUP BY edible_or_poisonous, cap_color)
ORDER BY 1,3 DESC
"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_kp8755', PASS='orcl_kp8755', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df_nth)
# nth_value
df_nth <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"
SELECT edible_or_poisonous, cap_color, n, nth_value(n,3)
OVER (PARTITION BY edible_or_poisonous)
FROM
(SELECT
CASE
WHEN edible_or_poisonous = \\\'e\\\' THEN \\\'edible\\\'
WHEN edible_or_poisonous = \\\'p\\\' THEN \\\'poisonous\\\'
ELSE edible_or_poisonous END as edible_or_poisonous,
CASE
WHEN cap_color = \\\'b\\\' THEN \\\'buff\\\'
WHEN cap_color = \\\'c\\\' THEN \\\'cinnamon\\\'
WHEN cap_color = \\\'e\\\' THEN \\\'red\\\'
WHEN cap_color = \\\'g\\\' THEN \\\'gray\\\'
WHEN cap_color = \\\'n\\\' THEN \\\'brown\\\'
WHEN cap_color = \\\'p\\\' THEN \\\'pink\\\'
WHEN cap_color = \\\'r\\\' THEN \\\'green\\\'
WHEN cap_color = \\\'u\\\' THEN \\\'purple\\\'
WHEN cap_color = \\\'w\\\' THEN \\\'white\\\'
WHEN cap_color = \\\'y\\\' THEN \\\'yellow\\\'
ELSE cap_color END as cap_color, count(*) n
FROM mushroom GROUP BY edible_or_poisonous, cap_color)
ORDER BY 1,3 DESC
"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_kp8755', PASS='orcl_kp8755', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df_nth)
# nth_value
df_nth <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"
SELECT edible_or_poisonous, cap_color, n, nth_value(n,3)
OVER (PARTITION BY edible_or_poisonous) nth_value
FROM
(SELECT
CASE
WHEN edible_or_poisonous = \\\'e\\\' THEN \\\'edible\\\'
WHEN edible_or_poisonous = \\\'p\\\' THEN \\\'poisonous\\\'
ELSE edible_or_poisonous END as edible_or_poisonous,
CASE
WHEN cap_color = \\\'b\\\' THEN \\\'buff\\\'
WHEN cap_color = \\\'c\\\' THEN \\\'cinnamon\\\'
WHEN cap_color = \\\'e\\\' THEN \\\'red\\\'
WHEN cap_color = \\\'g\\\' THEN \\\'gray\\\'
WHEN cap_color = \\\'n\\\' THEN \\\'brown\\\'
WHEN cap_color = \\\'p\\\' THEN \\\'pink\\\'
WHEN cap_color = \\\'r\\\' THEN \\\'green\\\'
WHEN cap_color = \\\'u\\\' THEN \\\'purple\\\'
WHEN cap_color = \\\'w\\\' THEN \\\'white\\\'
WHEN cap_color = \\\'y\\\' THEN \\\'yellow\\\'
ELSE cap_color END as cap_color, count(*) n
FROM mushroom GROUP BY edible_or_poisonous, cap_color)
ORDER BY 1,3 DESC
"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_kp8755', PASS='orcl_kp8755', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df_nth)
# nth_value
df_nth <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"
SELECT edible_or_poisonous, cap_color, n, nth_value(n,3)
OVER (PARTITION BY edible_or_poisonous) 3rd_value
FROM
(SELECT
CASE
WHEN edible_or_poisonous = \\\'e\\\' THEN \\\'edible\\\'
WHEN edible_or_poisonous = \\\'p\\\' THEN \\\'poisonous\\\'
ELSE edible_or_poisonous END as edible_or_poisonous,
CASE
WHEN cap_color = \\\'b\\\' THEN \\\'buff\\\'
WHEN cap_color = \\\'c\\\' THEN \\\'cinnamon\\\'
WHEN cap_color = \\\'e\\\' THEN \\\'red\\\'
WHEN cap_color = \\\'g\\\' THEN \\\'gray\\\'
WHEN cap_color = \\\'n\\\' THEN \\\'brown\\\'
WHEN cap_color = \\\'p\\\' THEN \\\'pink\\\'
WHEN cap_color = \\\'r\\\' THEN \\\'green\\\'
WHEN cap_color = \\\'u\\\' THEN \\\'purple\\\'
WHEN cap_color = \\\'w\\\' THEN \\\'white\\\'
WHEN cap_color = \\\'y\\\' THEN \\\'yellow\\\'
ELSE cap_color END as cap_color, count(*) n
FROM mushroom GROUP BY edible_or_poisonous, cap_color)
ORDER BY 1,3 DESC
"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_kp8755', PASS='orcl_kp8755', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df_nth)
# nth_value
df_nth <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"
SELECT edible_or_poisonous, cap_color, n, nth_value(n,3)
OVER (PARTITION BY edible_or_poisonous) as 3rd_value
FROM
(SELECT
CASE
WHEN edible_or_poisonous = \\\'e\\\' THEN \\\'edible\\\'
WHEN edible_or_poisonous = \\\'p\\\' THEN \\\'poisonous\\\'
ELSE edible_or_poisonous END as edible_or_poisonous,
CASE
WHEN cap_color = \\\'b\\\' THEN \\\'buff\\\'
WHEN cap_color = \\\'c\\\' THEN \\\'cinnamon\\\'
WHEN cap_color = \\\'e\\\' THEN \\\'red\\\'
WHEN cap_color = \\\'g\\\' THEN \\\'gray\\\'
WHEN cap_color = \\\'n\\\' THEN \\\'brown\\\'
WHEN cap_color = \\\'p\\\' THEN \\\'pink\\\'
WHEN cap_color = \\\'r\\\' THEN \\\'green\\\'
WHEN cap_color = \\\'u\\\' THEN \\\'purple\\\'
WHEN cap_color = \\\'w\\\' THEN \\\'white\\\'
WHEN cap_color = \\\'y\\\' THEN \\\'yellow\\\'
ELSE cap_color END as cap_color, count(*) n
FROM mushroom GROUP BY edible_or_poisonous, cap_color)
ORDER BY 1,3 DESC
"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_kp8755', PASS='orcl_kp8755', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df_nth)
# nth_value
df_nth <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"
SELECT edible_or_poisonous, cap_color, n, nth_value(n,3)
OVER (PARTITION BY edible_or_poisonous) value
FROM
(SELECT
CASE
WHEN edible_or_poisonous = \\\'e\\\' THEN \\\'edible\\\'
WHEN edible_or_poisonous = \\\'p\\\' THEN \\\'poisonous\\\'
ELSE edible_or_poisonous END as edible_or_poisonous,
CASE
WHEN cap_color = \\\'b\\\' THEN \\\'buff\\\'
WHEN cap_color = \\\'c\\\' THEN \\\'cinnamon\\\'
WHEN cap_color = \\\'e\\\' THEN \\\'red\\\'
WHEN cap_color = \\\'g\\\' THEN \\\'gray\\\'
WHEN cap_color = \\\'n\\\' THEN \\\'brown\\\'
WHEN cap_color = \\\'p\\\' THEN \\\'pink\\\'
WHEN cap_color = \\\'r\\\' THEN \\\'green\\\'
WHEN cap_color = \\\'u\\\' THEN \\\'purple\\\'
WHEN cap_color = \\\'w\\\' THEN \\\'white\\\'
WHEN cap_color = \\\'y\\\' THEN \\\'yellow\\\'
ELSE cap_color END as cap_color, count(*) n
FROM mushroom GROUP BY edible_or_poisonous, cap_color)
ORDER BY 1,3 DESC
"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_kp8755', PASS='orcl_kp8755', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df_nth)
# nth_value
df_nth <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"
SELECT edible_or_poisonous, cap_color, n, nth_value(n,3)
OVER (PARTITION BY edible_or_poisonous) third_value
FROM
(SELECT
CASE
WHEN edible_or_poisonous = \\\'e\\\' THEN \\\'edible\\\'
WHEN edible_or_poisonous = \\\'p\\\' THEN \\\'poisonous\\\'
ELSE edible_or_poisonous END as edible_or_poisonous,
CASE
WHEN cap_color = \\\'b\\\' THEN \\\'buff\\\'
WHEN cap_color = \\\'c\\\' THEN \\\'cinnamon\\\'
WHEN cap_color = \\\'e\\\' THEN \\\'red\\\'
WHEN cap_color = \\\'g\\\' THEN \\\'gray\\\'
WHEN cap_color = \\\'n\\\' THEN \\\'brown\\\'
WHEN cap_color = \\\'p\\\' THEN \\\'pink\\\'
WHEN cap_color = \\\'r\\\' THEN \\\'green\\\'
WHEN cap_color = \\\'u\\\' THEN \\\'purple\\\'
WHEN cap_color = \\\'w\\\' THEN \\\'white\\\'
WHEN cap_color = \\\'y\\\' THEN \\\'yellow\\\'
ELSE cap_color END as cap_color, count(*) n
FROM mushroom GROUP BY edible_or_poisonous, cap_color)
ORDER BY 1,3 DESC
"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_kp8755', PASS='orcl_kp8755', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df_nth)
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"select empno, deptno, sal, cume_dist()
OVER (PARTITION BY deptno order by sal) cume_dist
from emp
order by 2,3 desc"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDB1.usuniversi01134.oraclecloud.internal', USER='DV_Scott', PASS='orcl', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df)
# cume_dist
df_cume <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"
SELECT edible_or_poisonous, cap_color, n, cume_dist()
OVER (PARTITION BY edible_or_poisonous ORDER BY n) cume_dist
FROM
(SELECT
CASE
WHEN edible_or_poisonous = \\\'e\\\' THEN \\\'edible\\\'
WHEN edible_or_poisonous = \\\'p\\\' THEN \\\'poisonous\\\'
ELSE edible_or_poisonous END as edible_or_poisonous,
CASE
WHEN cap_color = \\\'b\\\' THEN \\\'buff\\\'
WHEN cap_color = \\\'c\\\' THEN \\\'cinnamon\\\'
WHEN cap_color = \\\'e\\\' THEN \\\'red\\\'
WHEN cap_color = \\\'g\\\' THEN \\\'gray\\\'
WHEN cap_color = \\\'n\\\' THEN \\\'brown\\\'
WHEN cap_color = \\\'p\\\' THEN \\\'pink\\\'
WHEN cap_color = \\\'r\\\' THEN \\\'green\\\'
WHEN cap_color = \\\'u\\\' THEN \\\'purple\\\'
WHEN cap_color = \\\'w\\\' THEN \\\'white\\\'
WHEN cap_color = \\\'y\\\' THEN \\\'yellow\\\'
ELSE cap_color END as cap_color, count(*) n
FROM mushroom GROUP BY edible_or_poisonous, cap_color)
ORDER BY 1,3 DESC
"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_kp8755', PASS='orcl_kp8755', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df_cume)
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"SELECT empno, deptno, sal, nth_value(sal, 2)
OVER (PARTITION BY deptno) max_sal
FROM emp
order by 2,3 desc"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDB1.usuniversi01134.oraclecloud.internal', USER='DV_Scott', PASS='orcl', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df)
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"select empno, deptno, sal, last_value(max_sal)
OVER (PARTITION BY deptno order by sal) max_sal, last_value(max_sal)
OVER (PARTITION BY deptno order by sal) - sal sal_diff
from
(SELECT empno, deptno, sal, max(sal)
OVER (PARTITION BY deptno) max_sal
FROM emp)
order by 2,3 desc"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDB1.usuniversi01134.oraclecloud.internal', USER='DV_Scott', PASS='orcl', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df)
# last_value/max_value and difference
df_last_max_diff <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"
SELECT edible_or_poisonous, cap_color, n, last_value(max_n)
OVER (PARTITION BY edible_or_poisonous ORDER BY n) max_n, last_value(max_n)
OVER (PARTITION BY edible_or_poisonous ORDER BY n) - n n_diff
FROM
(SELECT
CASE
WHEN edible_or_poisonous = \\\'e\\\' THEN \\\'edible\\\'
WHEN edible_or_poisonous = \\\'p\\\' THEN \\\'poisonous\\\'
ELSE edible_or_poisonous END as edible_or_poisonous,
CASE
WHEN cap_color = \\\'b\\\' THEN \\\'buff\\\'
WHEN cap_color = \\\'c\\\' THEN \\\'cinnamon\\\'
WHEN cap_color = \\\'e\\\' THEN \\\'red\\\'
WHEN cap_color = \\\'g\\\' THEN \\\'gray\\\'
WHEN cap_color = \\\'n\\\' THEN \\\'brown\\\'
WHEN cap_color = \\\'p\\\' THEN \\\'pink\\\'
WHEN cap_color = \\\'r\\\' THEN \\\'green\\\'
WHEN cap_color = \\\'u\\\' THEN \\\'purple\\\'
WHEN cap_color = \\\'w\\\' THEN \\\'white\\\'
WHEN cap_color = \\\'y\\\' THEN \\\'yellow\\\'
ELSE cap_color END as cap_color, count(*) n, max(n)
OVER (PARTITION BY edible_or_poisonous) max_n
FROM mushroom GROUP BY edible_or_poisonous, cap_color)
ORDER BY 1,3 DESC
"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_kp8755', PASS='orcl_kp8755', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df_last_max_diff)
# last_value/max_value and difference
df_last_max_diff <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"
SELECT edible_or_poisonous, cap_color, n, last_value(max_n)
OVER (PARTITION BY edible_or_poisonous ORDER BY n) max_n, last_value(max_n)
OVER (PARTITION BY edible_or_poisonous ORDER BY n) - n n_diff
FROM
(SELECT edible_or_poisonous, cap_color, n, max(n)
OVER (PARTITION BY edible_or_poisonous) max_n
FROM
(SELECT
CASE
WHEN edible_or_poisonous = \\\'e\\\' THEN \\\'edible\\\'
WHEN edible_or_poisonous = \\\'p\\\' THEN \\\'poisonous\\\'
ELSE edible_or_poisonous END as edible_or_poisonous,
CASE
WHEN cap_color = \\\'b\\\' THEN \\\'buff\\\'
WHEN cap_color = \\\'c\\\' THEN \\\'cinnamon\\\'
WHEN cap_color = \\\'e\\\' THEN \\\'red\\\'
WHEN cap_color = \\\'g\\\' THEN \\\'gray\\\'
WHEN cap_color = \\\'n\\\' THEN \\\'brown\\\'
WHEN cap_color = \\\'p\\\' THEN \\\'pink\\\'
WHEN cap_color = \\\'r\\\' THEN \\\'green\\\'
WHEN cap_color = \\\'u\\\' THEN \\\'purple\\\'
WHEN cap_color = \\\'w\\\' THEN \\\'white\\\'
WHEN cap_color = \\\'y\\\' THEN \\\'yellow\\\'
ELSE cap_color END as cap_color, count(*) n
FROM mushroom GROUP BY edible_or_poisonous, cap_color))
ORDER BY 1,3 DESC
"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_kp8755', PASS='orcl_kp8755', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df_last_max_diff)
source('~/Documents/School/2015spring/DataVis/DV_TableauProject2/01 SQL Crosstabs/sql_rank.R')
source('~/Documents/School/2015spring/DataVis/DV_TableauProject2/01 SQL Crosstabs/sql_last_max_diff.R')
source('~/Documents/School/2015spring/DataVis/DV_TableauProject2/01 SQL Crosstabs/sql_nth.R')
source('~/Documents/School/2015spring/DataVis/DV_TableauProject2/01 SQL Crosstabs/sql_cume_dist.R')
View(df_cume_dist)
View(df_last_max_diff)
View(df_nth)
View(df_rank)
